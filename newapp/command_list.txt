1. Создать двух пользователей (с помощью метода User.objects.create_user('username')).
-----
u1 = User.objects.create_user(username='Anatoliy')
u2 = User.objects.create_user(username='Alexandra')


2. Создать два объекта модели Author, связанные с пользователями.
-----
Author.objects.create(authorUser=u1)
Author.objects.create(authorUser=u2)


3. Добавить 4 категории в модель Category.
-----
Category.objects.create(name='Последние обновления')
Category.objects.create(name='Windows')
Category.objects.create(name='Обзоры')
Category.objects.create(name='Советы и рекомендации')


4. Добавить 2 статьи и 1 новость.
-----
author = Author.objects.get(id=1)
Post.objects.create(
	author=author, 
	categoryType='AR', 
	title='Как определить архитектуру процессора вашего Android-устройства (armeabi-v7a, arm64-v8a, x86, x86_64) с помощью приложения CPU X или информации в настройках', 
	text="""
	Архитектура процессора вашего Android-устройства определяет, какие приложения и компоненты с ним совместимы.

	Эта информация может быть полезна при установке APK-файлов, загруженных с таких сайтов как APKMirror, APKPure, APKCombo и других. В настоящий момент, выпускаются APK для четырёх архитектур: armeabi-v7a (arm), arm64-v8a (aarch64), x86 (i386) и x86_64.

	Как устанавливать мобильные приложения и игры с помощью APK, XAPK и APKM файлов

	В этой статье мы расскажем, как узнать архитектуру вашего Android-смартфона или планшета, используя приложение CPU X или информацию в настройках устройства.
	Содержание

	Определение архитектуры с помощью приложения CPU X
	Определение архитектуры через настройки Android-устройства

	Определение архитектуры с помощью приложения CPU X

	Приложение CPU X предоставляет информацию о вашем устройстве, включая архитектуру процессора. Вот как его использовать:

	Установите приложение CPU X из Google Play Маркет.
	Запустите приложение и откройте вкладку Процессор (Device).
	В разделе "Процессор" найдите строку Набор инструкций (Instruction Sets). Здесь будет указана архитектура вашего устройства (armeabi-v7a, arm64-v8a, x86 или x86_64).

	Определение архитектуры через настройки Android-устройства:

	Откройте настройки на вашем Android-устройстве.
	Найдите раздел "О телефоне" или "О планшете" (зависит от устройства).
	Ищите информацию о процессоре или модели устройства и проконсультируйтесь с информацией о производителе. Обычно модель процессора указывает на архитектуру, которую вы ищете (например, Snapdragon 865 — это процессор архитектуры arm64-v8a).

	Заключение
	
	Определение архитектуры вашего Android-устройства важно для того, чтобы установить совместимые приложения и компоненты. Вы можете использовать приложение CPU X или информацию в настройках устройства, чтобы узнать архитектуру вашего процессора. Теперь, зная архитектуру вашего устройства, вы сможете установить правильные версии приложений и наслаждаться их работой на вашем смартфоне или планшете.
	""")
	
	
author = Author.objects.get(id=2)
Post.objects.create(
	author=author, 
	categoryType='AR', 
	title='Как защититься от атак с двойным расширением файлов в Windows 11 и Windows 10', 
	text="""
	Один из самых популярных техноканалов каналов на YouTube недавно был взломан. Аудитория канала Linus Tech Tips превышает 15 миллионов подписчиков, но даже все технические знания компании не уберегли ее от взлома.

	Как выяснилось, подобный вид атак был нацелен не только на Linus Tech Tips.

	Все началось с сообщения на электронную почту с предложением сотрудничества. Неизвестно, сколько именно писем поступило, но обычно злоумышленники отправляют одно безопасное сообщение в начале, дожидаются ответа потенциальной жертвы, а затем присылают письмо с вредоносным вложением.

	Представитель Linus Tech Tips получил письмо с Zip-файлом, который якобы содержал спонсорское предложение. Сотрудник распаковал архив и обнаружил, что в нем содержится PDF-документ.

	Проблема заключалась в том, что это был не PDF-документ, а файл заставки Windows. Одна из серьезных проблем безопасности Windows заключается в том, что система скрывает определенные распространенные расширения файлов в Проводнике. Злоумышленник может переименовать файл SuperOffer.scr в SuperOffer.pdf.scr, и Windows покажет в Проводнике только часть SuperOffer.pdf. Это действительно выглядит как PDF-документ, и, поскольку ему можно присвоить значок PDF, то все выглядит еще более правдоподобным.

	При открытии файла не загружается программа просмотра PDF, а запускается исполняемый файл. На этом этапе, если не срабатывает антивирусная защита, компьютер следует считать зараженным.
	Как защититься от атак с вредоносными вложениями в почте

	Защититься от атак с использованием двойных расширений файлов довольно просто — это займет несколько кликов. Проблема здесь заключается в том, что Microsoft решила отдать предпочтение более минималистичному виду файлов в системе, а не безопасности.

	Предложенное изменение заставляет Windows всегда отображать расширения файлов. Приведенный выше пример вредоносного файла будет отображаться в Windows как SuperOffer.pdf.scr, что повысит вероятность его идентификации как потенциально вредоносного.

	Приводим пошаговые инструкции для Windows 10 и Windows 11:

	Windows 10
	Откройте Проводник (по умолчанию закреплен на панели задач).
	Выберите Файл > Изменить параметры папок и поиска
	Перейдите на вкладку Вид.
	Снимите флажок Скрывать расширения для зарегистрированных типов файлов.
	Нажмите ОК.
	Windows 10 теперь будет отображать расширения для всех типов файлов.

	Windows 11
	Откройте Проводник (по умолчанию закреплен на панели задач).
	Выберите Меню (три точки), а затем Параметры.
	Перейдите на вкладку Вид в окне Параметры папок.
	Снимите флажок Скрывать расширения для зарегистрированных типов файлов.
	Нажмите ОК.
	Windows 11 теперь будет отображать расширения для всех типов файлов.

	Данное изменение увеличивает вероятность обнаружения файлов, которые пытаются скрыть свой настоящий тип, добавляя к имени файла поддельные расширения. Хотя это не гарантирует, что пользователи не запустят файл случайно, это дает неопытным пользователям больше шансов заподозрить опасность.

	Еще одна мера, снижающая вероятность таких атак — привычка запускать подозрительные вложения почты в песочницах и виртуальных машинах.
	""")


author = Author.objects.get(id=1)
Post.objects.create(
	author=author, 
	categoryType='NW', 
	title='Firefox будет поддерживать Windows 7 и Windows 8.1 как минимум до середины 2024 года', 
	text="""
	Mozilla поделилась своими планами по поддержку устаревших систем Windows 7 и Windows 8.1. Организация собирается поддерживать эти ОС как минимум до третьего квартала 2024 года
	Firefox будет поддерживать Windows 7 и Windows 8.1 как минимум до середины 2024 года
	В баг-трекере Bugzilla сотрудник Mozilla Майк Капли (Mike Kaply) написал:

	Мы не прекратим поддержку Windows 7 и Windows 8 до выпуска Firefox 115 ESR, поэтому Firefox 115 ESR будет поддерживать Windows 7 и Windows 8 как минимум до 3 квартала 2024 года.

	Первая версия с расширенной поддержкой Firefox 115 ESR будет выпущена 4 июля 2023 года. Она будет поддерживаться на протяжении 15 выпусков. Mozilla выпускает новую версию на стабильном канале каждые четыре недели, а это означает, что Firefox 115 ESR будет поддерживаться в течение 60 недель после его релиза в июле.

	После завершения жизненного цикла Windows 7, Windows 8.1 и Windows 8 Mozilla обязалась не прекращать поддержку, предоставив варианты пользователям устаревших систем. Такие факторы, как количество пользователей и организаций, использующих Firefox на устройствах с Windows 7 или 8.1, будут играть роль в определении дальнейшей судьбы браузера для этих систем.
	Бесплатное обновление до Windows 10 для пользователей Windows 7 SP1 и 8.1

	Microsoft прекратила поддержку Windows 7, 8.1 и 8 в январе 2023 года. Все браузеры на Chromium по решению Google больше не поддерживаются на этих платформах. Mozilla Firefox — один из немногих браузеров, которые продолжают поддерживать эти ОС.
	Правильное решение Mozilla

	В этот раз Mozilla поступила абсолютно правильно. Хотя организация могла прекратить поддержку Windows 7 и 8 с окончанием текущего цикла ESR, который заканчивается 29 августа 2023 года, Mozilla решила продолжить поддержку как минимум еще одного цикла ESR.
	Какой браузер выбрать для Windows 7 и Windows 8.1?

	Последнее исследование телеметрии Mozilla показывает, что 13,44% всех установок Firefox работают на Windows 7. Это второе место после доминирующей Windows 10. Цифры, вероятно, упадут в ближайшие месяцы, но, в любом случае, это значительная часть всей пользовательской базы.

	Данное решение гарантирует, что пользователи Firefox не перейдут на другой браузер, как бы мало их ни было. Кроме того, это способствует переходу пользователей Chrome в этих системах на Firefox. Браузер Mozilla продолжит получать обновления безопасности и исправления ошибок еще как минимум год, что может быть достаточной причиной для некоторых, чтобы переключиться.

	Минусов для организации не так уж много. Mozilla придется тестировать сборки Firefox на этих платформах, чтобы убедиться, что браузер работает стабильно и безопасно, но она делала это уже в течение последних десяти лет.
	""")
	
	
5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
-----
Post.objects.get(id=1).postCategory.add(Category.objects.get(id=3))

Post.objects.get(id=2).postCategory.add(Category.objects.get(id=2), Category.objects.get(id=4))

Post.objects.get(id=3).postCategory.add(Category.objects.get(id=1))


6. Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
-----
Comment.objects.create(
	commentPost=Post.objects.get(id=1),
	commentUser=Author.objects.get(id=1).authorUser,
	text="""
	Поскольку наши китайские друзья давно научились обманывать такого типа приложения (особенно они преуспели в завышении версии версии андроид), то доверяю пока Device_Info_HW. Особенно это касается автомагнитол, там они могут написать много чего хорошего, чего нет на самом деле. Так что бездумно доверять этим программам нельзя.
	""")


Comment.objects.create(
	commentPost=Post.objects.get(id=2),
	commentUser=Author.objects.get(id=2).authorUser,
	text="""
	Вообще это очень глупо со стороны microsоft по умолчанию скрывать расширения файлов, раньше такого не было.
	""")
	
	
Comment.objects.create(
	commentPost=Post.objects.get(id=3),
	commentUser=Author.objects.get(id=1).authorUser,
	text="""
	Молодцы, в отличии от других, которые стремятся избавится по быстрому от поддержки - своего же продукта, делая маркетинг ход, заставляя клиента менять продукт, тем самым получая прибыль
	""")


Comment.objects.create(
	commentPost=Post.objects.get(id=3),
	commentUser=Author.objects.get(id=2).authorUser,
	text="""
	ну ладно не поддерживайте, но хотябы чтобы запускались и работали типа не официально
	""")
	

7. Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
-----
Comment.objects.get(id=1).like()
Comment.objects.get(id=1).like()
Comment.objects.get(id=1).like()
Comment.objects.get(id=1).dislike()

Comment.objects.get(id=2).like()
Comment.objects.get(id=2).like()

Comment.objects.get(id=3).like()
Comment.objects.get(id=3).dislike()
Comment.objects.get(id=3).dislike()
Comment.objects.get(id=3).like()
Comment.objects.get(id=3).like()

Comment.objects.get(id=4).dislike()
Comment.objects.get(id=4).like()
Comment.objects.get(id=4).dislike()


8. Обновить рейтинги пользователей.
-----
a1 = Author.objects.get(id=1)
a1.update_rating()

a2 = Author.objects.get(id=2)
a2.update_rating()


9. Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
-----
a = Author.objects.order_by('-ratingAuthor')[:1][0]
a.authorUser.username
a.ratingAuthor


10. Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
-----
u1 = User.objects.get(id=1)

u1.date_joined.strftime('%Y-%m-%d')

u1.username

a1 = Author.objects.get(id=u1.id)
a1.ratingAuthor

Post.objects.get(id=2).like()
Post.objects.get(id=1).like()
Post.objects.get(id=1).like()
Post.objects.get(id=1).like()
Post.objects.get(id=3).dislike()
Post.objects.get(id=3).like()

p = Post.objects.order_by('-rating')[:1][0]
p.title
p.preview()


11. Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
-----
p = Post.objects.order_by('-rating')[:1][0]
comments = Comment.objects.filter(commentPost_id=p.id)
for c in comments:
  c.dateCreation.strftime('%Y-%m-%d')
  User.objects.get(id=c.commentUser_id)
  c.rating
  c.text